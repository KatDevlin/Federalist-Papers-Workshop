install.packages("quanteda")
install.packages("tm")
install.packages("dplyr")
install.packages("plyr")
library(quanteda)
?similarity
shiny::runApp('Dropbox/UNCC_SocialScience_Collaboration/socsci_shiny')
shiny::runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
shiny::runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
shiny::runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
tdfm$Company
MyCorpus$metadata
myCorpus$metadata["Company"]
MyCorpus$metadata["Company"]
MyCorpus$metadata['Company']
MyCorpus$metadata
summary(myCorpus, n = 5, showmeta = TRUE)
summary(MyCorpus, n = 5, showmeta = TRUE)
Q
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
shiny::runApp('Dropbox/ProjectMosaicTool')
colleges[input$topic.college]
colleges
input$topic.college
colleges[as.numeric(input$topic.college)]
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
Dfm <- dfm(Corpus, groups = "Author", ignoredFeatures = c(stopwords("english"), stp),
stem = input$stemming, removeTwitter = input$twitter.stop, ngrams=c(1,input$unigrams))
text$StandardAuthor
text$Department
text$College
College %in% colleges[input$topic.college]
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
xx <- subset(Corpus, College %in% colleges[input$topic.college])
colleges[input$topic.college]
input$topic.college
runApp('Dropbox/ProjectMosaicTool')
colleges[as.numeric(input$topic.college)]
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
xx <- topic.network(v$probterms, v$probdocs, input$parm, v$topicnames)
runApp('Dropbox/ProjectMosaicTool')
unlist(strsplit(trimws(tweet.stopwords),","))
runApp('Dropbox/ProjectMosaicTool')
xx <- topic.network(v$probterms, v$probdocs, input$parm, v$topicnames)
Q
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
tdata2 <- data.frame(ID = tdata[,5], Topic_Prob = round(temp,3), stringsAsFactors = F)
order(tdata2$Topic_Prob,decreasing = T)
v$probdocs[,c(input$topic.network_selected)]
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
summary(z$Corpus, length(temp))
?dfm
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
runApp('Dropbox/ProjectMosaicTool')
shiny::runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
trimws(input$stopwords)
runApp('Dropbox/MNEs/Analyses/Ryan/Domestic/DomesticShinyApp')
library(shiny)
?bootstrapPage
print(source('Desktop/MyShinyApp.R')$value)
print(source('Desktop/MyShinyApp.R')$value)
print(source('Desktop/MyShinyApp.R')$value)
print(source('Desktop/MyShinyApp.R')$value)
print(source('Desktop/MyShinyApp.R')$value)
runExample("01_hello")
runExample("08_html")
runExample("04_mpg")
runExample("11_timer")
runExample("06_tabsets")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
devtools::install_github("stan-dev/shinystan", build_vignettes = TRUE)
library("shinystan")
launch_shinystan(my_fit)
shiny::runApp('Dropbox/ShinyDemo/LDAModelApp')
runApp('Dropbox/ShinyDemo/LDAModelApp')
setwd("~/Dropbox/Federalist-Papers-Workshop")  #Linux
#setwd("C:/Users/rwesslen/Dropbox/Federalist-Papers-Workshop") #Windows
#install.packages("quanteda")
library(quanteda)
papers <- read.csv("../data/federalist.csv", stringsAsFactors = F)
papers <- read.csv("./data/federalist.csv", stringsAsFactors = F)
dim(papers)
table(papers$author)
#		train/test: limit to Hamilton/Mad documents (drop Jay and Ham&Madison papers)
train <- which(papers$auth=="HAMILTON" | papers$auth=="MADISON")
length(train)	# 65
test <- which(papers$auth=="DISPUTED")
length(test)	# 12
library(quanteda)
# remove "To the People of the State of New York <l>"
papers$text <- substring(papers$text,45)
# remove html tags
tags <- c("<c>","<p>","<S>","<l>","<q>","<d>","<Q>")
for (i in tags){
papers$text <- gsub(i," ",papers$text)
}
# build the corpus
myCorpus <- corpus(papers$text)
# add in the attributes about the papers (number, author, train/test flag)
docvars(myCorpus, "Number") <- papers$number
docvars(myCorpus, "Author") <- papers$author
# summarize the documents
summary(myCorpus, 5)
